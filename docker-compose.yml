version: '2.4'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:9092 > /dev/null 2>&1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  postgres-order:
    image: postgres:14
    container_name: postgres-order
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders_service
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d orders_service" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  orders-service:
    build:
      context: ./orders-service
      dockerfile: Dockerfile
    container_name: orders-service
    ports:
      - "8081:8081"
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC_PAYMENT_REQUESTS: payments_requests
      KAFKA_TOPIC_PAYMENT_PROCESSED: payments_processed

      HTTP_ADDR: :8081
      DATABASE_URL: "postgres://postgres:postgres@postgres-order:5432/orders_service?sslmode=disable"

      LOG_LEVEL: info
      HTTP_READ_TIMEOUT: 10s
      HTTP_WRITE_TIMEOUT: 10s

      DB_MAX_OPEN_CONNS: 25
      DB_MAX_IDLE_CONNS: 25
      DB_CONN_MAX_LIFETIME: 5m
    depends_on:
      postgres-order:
        condition: service_healthy
      kafka:
        condition: service_healthy

  postgres-payments:
    image: postgres:14
    container_name: postgres-payments
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments_service
    volumes:
      - postgres_payments_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d payments_service" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s


  payments-service:
    build:
      context: ./payments-service
      dockerfile: Dockerfile
    container_name: payments-service
    ports:
      - "8082:8082"
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC_PAYMENT_REQUESTS: payments_requests
      KAFKA_TOPIC_PAYMENT_PROCESSED: payments_processed

      HTTP_ADDR: :8082
      DATABASE_URL: "postgres://postgres:postgres@postgres-payments:5432/payments_service?sslmode=disable"

      LOG_LEVEL: info
      HTTP_READ_TIMEOUT: 10s
      HTTP_WRITE_TIMEOUT: 10s

      DB_MAX_OPEN_CONNS: 25
      DB_MAX_IDLE_CONNS: 25
      DB_CONN_MAX_LIFETIME: 5m
    depends_on:
      postgres-payments:
        condition: service_healthy
      kafka:
        condition: service_healthy

  api-gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8083:8083"
    environment:
      HTTP_ADDR: ":8083"
      ORDER_SERVICE_URL: "http://orders-service:8081"
      PAYMENT_SERVICE_URL: "http://payments-service:8082"
    depends_on:
      - orders-service
      - payments-service

volumes:
  postgres_order_data:
  postgres_payments_data:
